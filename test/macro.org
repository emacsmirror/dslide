#+title:	Kmacros
#+author:	Positron
#+email:	contact@positron.solutions

* Keyboard.   Macros.
This is the best thing since üî™üçû

** Let's Record
1. ~dslide-kmacro-transribe-set-mark~
2. Record some macros
3. ~dslide-kmacro-transcribe-quit~
* Events
:PROPERTIES:
:DSLIDE_ACTIONS: dslide-action-hide-markup :ignore-types (keyword)
:END:

# Good Macro
 #+dslide_kmacro: :events [134217848 101 118 101 110 116 115]

* Backward
# Positrons go forward in reverse
#+dslide_kmacro: :direction backward :keys "M-x b a c k w a r d"

# Don't hit this going backward
#+dslide_kmacro: :keys "M-x f o r w a r d"
* Forward
# Positrons go forward in reverse
#+dslide_kmacro: :direction forward :keys "M-x f o r w a r d"

# Go forward with no direction
#+dslide_kmacro: :keys "M-x n o d i r e c t i o n"
* Play Funky
#+begin_comment
This macro is interpreted by ~kbd~ to a string, which will fail if used as a key sequence vector.
#+end_comment
#+dslide_kmacro: :keys "<tab>"
- The content here will be folded when the macro plays successfully
* COMMENT Closed Conversion
Record something using =M-<return>= and =M-<backspace>=.

# M-<return> test
#+dslide_kmacro: :keys "M-> M-<return>"

# Plays back after this point
* Recording Strange Events
- M-<return>
- M-<backspace>
- <backspace>
- <return>
...possibly many more
# weird keys
#+dslide_kmacro: :keys "M-<return> M-<backspace> a a a <backspace> <backspace> <backspace> <return> <return> <return> a a"
